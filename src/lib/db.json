
{
  "users": {
    "u1": { "id": "u1", "name": "Alice Johnson", "email": "alice@example.com", "password": "password123", "role": "student" },
    "u2": { "id": "u2", "name": "Bob Williams", "email": "bob@example.com", "password": "password123", "role": "student" },
    "u3": { "id": "u3", "name": "Charlie Brown", "email": "charlie@example.com", "password": "password123", "role": "student" },
    "t1": { "id": "t1", "name": "Prof. Davis", "email": "davis@example.com", "password": "password123", "role": "teacher" }
  },
  "courses": {
    "c1": { "id": "c1", "title": "Introduction to Web Development", "description": "Learn the fundamentals of HTML, CSS, and JavaScript.", "duration": "8 Weeks", "teacherId": "t1", "imageUrl": "https://picsum.photos/seed/1/600/400" },
    "c2": { "id": "c2", "title": "Advanced React", "description": "Dive deep into React hooks, state management, and performance.", "duration": "6 Weeks", "teacherId": "t1", "imageUrl": "https://picsum.photos/seed/2/600/400" },
    "c3": { "id": "c3", "title": "Data Structures & Algorithms", "description": "Master essential data structures and algorithms for interviews.", "duration": "10 Weeks", "teacherId": "t1", "imageUrl": "https://picsum.photos/seed/3/600/400" }
  },
  "enrollments": {
    "e1": { "id": "e1", "studentId": "u1", "courseId": "c1" },
    "e2": { "id": "e2", "studentId": "u1", "courseId": "c2" },
    "e3": { "id": "e3", "studentId": "u2", "courseId": "c1" },
    "e4": { "id": "e4", "studentId": "u3", "courseId": "c3" }
  },
  "assignments": {
    "as1": { "id": "as1", "courseId": "c1", "title": "HTML & CSS Basics", "description": "Create a simple personal portfolio page.", "dueDate": "2024-06-08T23:59:59.000Z" },
    "as2": { "id": "as2", "courseId": "c1", "title": "JavaScript Fundamentals", "description": "Build a simple calculator.", "dueDate": "2024-06-15T23:59:59.000Z" },
    "as3": { "id": "as3", "courseId": "c2", "title": "React Hooks", "description": "Build a todo list app using React Hooks.", "dueDate": "2024-06-06T23:59:59.000Z" },
    "as4": { "id": "as4", "courseId": "c3", "title": "Big O Notation", "description": "Analyze the time complexity of given algorithms.", "dueDate": "2024-05-29T23:59:59.000Z" }
  },
  "submissions": {
    "sub1": { "id": "sub1", "assignmentId": "as1", "studentId": "u1", "content": "Here is my portfolio. I used Flexbox for the layout.", "submittedAt": "2024-06-01T10:00:00.000Z", "grade": 95, "feedback": "Excellent work! Your CSS is clean and your HTML is semantic." },
    "sub2": { "id": "sub2", "assignmentId": "as4", "studentId": "u3", "content": "The complexity is O(n^2).", "submittedAt": "2024-05-28T14:30:00.000Z", "grade": 88, "feedback": "Correct analysis. Well done." },
    "sub3": { "id": "sub3", "assignmentId": "as1", "studentId": "u2", "content": "My submission for the portfolio.", "submittedAt": "2024-06-01T11:00:00.000Z", "grade": null, "feedback": null }
  },
  "discussion_threads": {
    "th1": { "id": "th1", "courseId": "c1", "title": "Question about Flexbox", "authorId": "u1", "createdAt": "2024-05-31T09:00:00.000Z" }
  },
  "discussion_posts": {
    "po1": { "id": "po1", "threadId": "th1", "authorId": "u1", "content": "I'm having trouble centering a div. Can anyone help?", "createdAt": "2024-05-31T09:00:00.000Z" },
    "po2": { "id": "po2", "threadId": "th1", "authorId": "t1", "content": "Sure! Try using 'display: flex; justify-content: center; align-items: center;' on the parent container.", "createdAt": "2024-06-01T12:00:00.000Z" }
  },
  "materials": {
    "mat1": { "id": "mat1", "courseId": "c1", "title": "MDN Docs for Flexbox", "link": "https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Flexible_Box_Layout/Basic_Concepts_of_Flexbox", "createdAt": "2024-06-01T12:05:00.000Z" }
  },
  "notifications": {},
  "attendance": {
      "att1": {"id": "att1", "studentId": "u1", "courseId": "c1", "date": "2024-06-01", "isPresent": true },
      "att2": {"id": "att2", "studentId": "u2", "courseId": "c1", "date": "2024-06-01", "isPresent": true }
  },
  "certificates": {},
  "challenges": {},
  "challenge_submissions": {},
  "challenge_votes": {},
  "projects": {},
  "internship_domains": {
    "google": {
      "id": "google",
      "name": "Google",
      "description": "Tackle a problem in large-scale systems, search, or machine learning. Focus on scalability and efficiency.",
      "icon": "Building",
      "task": {
        "title": "Design a Scalable URL Shortener",
        "scenario": "You are an intern on the Google Cloud Platform team. A major client needs a highly available and scalable URL shortening service, similar to bit.ly. Your task is to design the system architecture.",
        "task": "Design the core components of the service. Consider the API for creating and retrieving URLs, the data storage strategy for handling billions of URLs, and how you would handle traffic spikes.",
        "deliverables": [
          "A high-level system architecture diagram.",
          "A description of your chosen database schema (SQL or NoSQL) and why.",
          "An outline of the API endpoints (e.g., POST /shorten, GET /{shortCode})."
        ]
      }
    },
    "openai": {
      "id": "openai",
      "name": "OpenAI",
      "description": "Work on a problem related to large language models, AI safety, or creative AI applications.",
      "icon": "Bot",
      "task": {
        "title": "Develop a Content Moderation Filter",
        "scenario": "As part of the AI Safety team at OpenAI, you've been tasked with improving the content filter for a new generative AI model. The goal is to prevent the model from generating harmful or inappropriate content.",
        "task": "Propose a multi-layered filter system. Think about how you would classify different types of harmful content (e.g., hate speech, violence, misinformation) and what actions to take when a potential violation is detected.",
        "deliverables": [
          "A description of at least three layers of your filter.",
          "An example of a prompt that would be flagged and one that would pass, with explanations.",
          "A strategy for minimizing false positives (flagging safe content)."
        ]
      }
    }
  }
}
