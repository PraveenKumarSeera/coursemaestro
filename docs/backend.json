{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user in the LMS, either a student or a teacher.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "name": {
          "type": "string",
          "description": "The user's full name."
        },
        "email": {
          "type": "string",
          "description": "The user's email address.",
          "format": "email"
        },
        "role": {
          "type": "string",
          "description": "The user's role (e.g., 'student' or 'teacher')."
        }
      },
      "required": [
        "id",
        "name",
        "email",
        "role"
      ]
    },
    "Course": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Course",
      "type": "object",
      "description": "Represents a course offered in the LMS.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the course entity."
        },
        "title": {
          "type": "string",
          "description": "The title of the course."
        },
        "description": {
          "type": "string",
          "description": "A description of the course content."
        },
        "duration": {
          "type": "string",
          "description": "The duration of the course (e.g., '1 week', '1 month')."
        },
        "teacherId": {
          "type": "string",
          "description": "Reference to Teacher. (Relationship: Teacher 1:N Course)"
        }
      },
      "required": [
        "id",
        "title",
        "description",
        "duration",
        "teacherId"
      ]
    },
    "Enrollment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Enrollment",
      "type": "object",
      "description": "Represents a student's enrollment in a course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the enrollment entity."
        },
        "studentId": {
          "type": "string",
          "description": "Reference to User (Student). (Relationship: User 1:N Enrollment)"
        },
        "courseId": {
          "type": "string",
          "description": "Reference to Course. (Relationship: Course 1:N Enrollment)"
        },
        "enrollmentDate": {
          "type": "string",
          "description": "Date when the student enrolled in the course.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "studentId",
        "courseId",
        "enrollmentDate"
      ]
    },
    "Assignment": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Assignment",
      "type": "object",
      "description": "Represents an assignment for a specific course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the assignment entity."
        },
        "courseId": {
          "type": "string",
          "description": "Reference to Course. (Relationship: Course 1:N Assignment)"
        },
        "title": {
          "type": "string",
          "description": "The title of the assignment."
        },
        "description": {
          "type": "string",
          "description": "A description of the assignment instructions."
        },
        "dueDate": {
          "type": "string",
          "description": "The due date for the assignment.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "courseId",
        "title",
        "description",
        "dueDate"
      ]
    },
    "Submission": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Submission",
      "type": "object",
      "description": "Represents a student's submission for an assignment.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the submission entity."
        },
        "assignmentId": {
          "type": "string",
          "description": "Reference to Assignment. (Relationship: Assignment 1:N Submission)"
        },
        "studentId": {
          "type": "string",
          "description": "Reference to User (Student). (Relationship: User 1:N Submission)"
        },
        "submissionDate": {
          "type": "string",
          "description": "The date when the student submitted the assignment.",
          "format": "date-time"
        },
        "content": {
          "type": "string",
          "description": "The content of the submission (text or file URL)."
        }
      },
      "required": [
        "id",
        "assignmentId",
        "studentId",
        "submissionDate",
        "content"
      ]
    },
    "Grade": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Grade",
      "type": "object",
      "description": "Represents the grade given for a submission.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the grade entity."
        },
        "submissionId": {
          "type": "string",
          "description": "Reference to Submission. (Relationship: Submission 1:1 Grade)"
        },
        "grade": {
          "type": "number",
          "description": "The grade given for the submission (e.g., a number between 0 and 100)."
        },
        "feedback": {
          "type": "string",
          "description": "Feedback from the teacher on the submission."
        }
      },
      "required": [
        "id",
        "submissionId",
        "grade",
        "feedback"
      ]
    },
    "Discussion": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Discussion",
      "type": "object",
      "description": "Represents a discussion forum post within a course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the discussion post."
        },
        "courseId": {
          "type": "string",
          "description": "Reference to Course. (Relationship: Course 1:N Discussion)"
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Discussion)"
        },
        "postDate": {
          "type": "string",
          "description": "The date and time the post was created.",
          "format": "date-time"
        },
        "content": {
          "type": "string",
          "description": "The content of the discussion post."
        }
      },
      "required": [
        "id",
        "courseId",
        "userId",
        "postDate",
        "content"
      ]
    },
    "File": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "File",
      "type": "object",
      "description": "Represents a file uploaded for course materials.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the file entity."
        },
        "courseId": {
          "type": "string",
          "description": "Reference to Course. (Relationship: Course 1:N File)"
        },
        "fileName": {
          "type": "string",
          "description": "The name of the uploaded file."
        },
        "fileUrl": {
          "type": "string",
          "description": "The URL where the file is stored.",
          "format": "uri"
        },
        "uploadDate": {
          "type": "string",
          "description": "The date and time the file was uploaded.",
          "format": "date-time"
        }
      },
      "required": [
        "id",
        "courseId",
        "fileName",
        "fileUrl",
        "uploadDate"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profiles. Secured by path-based ownership: only the user can read/write their own profile.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}",
        "definition": {
          "entityName": "Course",
          "schema": {
            "$ref": "#/backend/entities/Course"
          },
          "description": "Stores course information. The 'teacherId' field denotes the course creator for authorization. Includes denormalized 'teacherId' for authorization independence.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}/enrollments/{enrollmentId}",
        "definition": {
          "entityName": "Enrollment",
          "schema": {
            "$ref": "#/backend/entities/Enrollment"
          },
          "description": "Stores enrollment records. Includes denormalized 'courseId' and 'studentId' for authorization independence.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            },
            {
              "name": "enrollmentId",
              "description": "The unique identifier for the enrollment."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}/assignments/{assignmentId}",
        "definition": {
          "entityName": "Assignment",
          "schema": {
            "$ref": "#/backend/entities/Assignment"
          },
          "description": "Stores assignment details for each course.  Includes denormalized 'courseId' for authorization independence.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            },
            {
              "name": "assignmentId",
              "description": "The unique identifier for the assignment."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/submissions/{submissionId}",
        "definition": {
          "entityName": "Submission",
          "schema": {
            "$ref": "#/backend/entities/Submission"
          },
          "description": "Stores student submissions. Secured by path-based ownership and includes denormalized 'studentId' and 'assignmentId' for authorization independence.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user (student)."
            },
            {
              "name": "submissionId",
              "description": "The unique identifier for the submission."
            }
          ]
        }
      },
      {
        "path": "/grades/{gradeId}",
        "definition": {
          "entityName": "Grade",
          "schema": {
            "$ref": "#/backend/entities/Grade"
          },
          "description": "Stores grades for submissions. Includes denormalized 'submissionId' for authorization independence. Teachers can write, students can read.",
          "params": [
            {
              "name": "gradeId",
              "description": "The unique identifier for the grade."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}/discussions/{discussionId}",
        "definition": {
          "entityName": "Discussion",
          "schema": {
            "$ref": "#/backend/entities/Discussion"
          },
          "description": "Stores discussion posts within a course. Includes denormalized 'courseId' for authorization independence.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            },
            {
              "name": "discussionId",
              "description": "The unique identifier for the discussion post."
            }
          ]
        }
      },
      {
        "path": "/courses/{courseId}/files/{fileId}",
        "definition": {
          "entityName": "File",
          "schema": {
            "$ref": "#/backend/entities/File"
          },
          "description": "Stores files uploaded for courses.  Includes denormalized 'courseId' for authorization independence.",
          "params": [
            {
              "name": "courseId",
              "description": "The unique identifier for the course."
            },
            {
              "name": "fileId",
              "description": "The unique identifier for the file."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to create a secure and scalable LMS, prioritizing Authorization Independence, Clarity of Intent, and adherence to DBAC principles. The structure utilizes path-based ownership for user-specific data and membership maps for collaborative data. It strategically denormalizes data to avoid `get()` calls in security rules, enabling atomic operations and simplifying debugging. Homogeneous collections are maintained to enforce consistent security postures. The design explicitly incorporates QAPs by segregating data based on access needs and standardizing authorization using membership maps."
  }
}